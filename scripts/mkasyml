#!/bin/bash
# Convert Google Repo Manifest XML to KAS Configuration YAML
#
# Usage: mkasyml
#
# Dependencies
#   - install jq from https://github.com/jqlang/jq/releases/latest
#   - install yq from https://github.com/mikefarah/yq/releases/latest
#
set -e

. $ROOT_DIR/.env
_VERBOSITY=1
hdr "Entered $0"

# Currently only support a single repo xml manifest, specified in $BSP_XML, overridden by $1
REPO_MANIFEST_XML=${1:-"$BSP_XML"}
# BSP_YML (defined in .env) path in BUILD_DIR, base other intermediate files on this
export REPO_MANIFEST_YML=$BSP_YML
export REPO_MANIFEST_JSON="${BSP_YML%.*}.json"
export REPO_MANIFEST_KAS_JSON="${BSP_YML%.*}.kas.json"

if [ verbose ]; then
    echo "xml=$REPO_MANIFEST_XML"
    echo "yml=$REPO_MANIFEST_YML"
    echo "json=$REPO_MANIFEST_JSON"
    echo "kas_json=$REPO_MANIFEST_KAS_JSON"
    tail -n999 "${REPO_MANIFEST_XML}"
fi

printf "Converting repo XML manifest '%s' to json at '%s'...\n" "${REPO_MANIFEST_XML}" "${REPO_MANIFEST_JSON}"
yq -p=xml -o=json --xml-attribute-prefix '' --xml-skip-proc-inst "$REPO_MANIFEST_XML" > "$REPO_MANIFEST_JSON"
verbose && echo && jq . "$REPO_MANIFEST_JSON"

printf "Converting repo JSON manifest '%s' to kas configuration json...\n" "$REPO_MANIFEST_JSON"
# TODO: is it ok to be discarding the <linkfile> elements in repo xml manifest? 
jq 'INDEX(.manifest.remote[]; .name) as $remotes | 
    { 
        header: { 
            version: 17 
        }, 
        machine: "imx8mp-var-dart", 
        distro: "fsl-imx-xwayland", 
        target: "fsl-image-gui", 
        build_system: "openembedded", 
        env: { 
            DL_DIR: "/mnt/wsl/internal-4tb-nvme/dl_dir", 
            SSTATE_DIR: "/mnt/wsl/internal-4tb-nvme/sstate_dir" 
        }, 
        # local_conf_header: {
        #   custom-local-conf: |
        #       ACCEPT_FSL_EULA = "1"
        #       DL_DIR = "/mnt/wsl/internal-4tb-nvme/dl_dir"
        #       SSTATE_DIR = "/mnt/wsl/internal-4tb-nvme/sstate_dir"
        # },
        repos: .manifest.project | map(
            { 
                "key": .name, 
                "value": { 
                    path: .path, 
                    url: "\($remotes[.remote].fetch)/\(.name)", 
                    branch: .upstream,
                    commit: .revision 
                }
            }
        ) | from_entries | del(..|nulls)
    }' "$REPO_MANIFEST_JSON" > "$REPO_MANIFEST_KAS_JSON"
verbose && echo && jq . "$REPO_MANIFEST_KAS_JSON"
 
printf "Converting KAS configuration JSON to YAML (technically unnecessary since kas supports json)...\n" "$REPO_MANIFEST_KAS_JSON"
yq -p=json -o=yaml "$REPO_MANIFEST_KAS_JSON" > "$REPO_MANIFEST_YML"
verbose && echo && yq . "$REPO_MANIFEST_YML"
hdr "Exiting $0"
